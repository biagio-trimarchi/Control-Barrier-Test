%% %% %% 4^th INTEGRATOR

%% SETUP
clear
clc
addpath('./Functions')

%% PARAMETERS
d = 2;  % Dimension
n = 2;  % Integrator Order
x_goal = [5; 5];
obs_c = [3; 1];
obs_r = 1;
d_safe = 1;

%% DYNAMICS
F = [zeros(n, 1), eye(n); zeros(1, n+1)];
F = kron(F, eye(d));

G = [zeros(n, 1); 1];
G = kron(G, eye(d));

%plotDisk(obs_c, obs_r);

syms x [d*(n+1) 1] 
syms aux

b(x) = (x(1:2) - obs_c)'*(x(1:2) - obs_c) - d_safe^2;

alpha(aux) = [aux;
             4*aux;
             4*aux];

f = F*x;
g = G;
psi(1) = b;
for i = 2:n
    tmp = alpha(psi(i-1));
    psi(i) = lieDer(psi(i-1), F*x, x) + tmp(i);
end

bigO = 0;
for i = 1:n-1
    tmp = alpha(psi(n-i));
    bigO = bigO + lieDerOrdr(tmp(n-i+1),f, x, i);
end

A = -lieDer(lieDerOrdr(b, f, x, n), g, x);
tmp = alpha(psi(n));
b = lieDerOrdr(b, f, x, n)+bigO+tmp(n+1);

K = [15, 5, 5];
dt = 0.01;
t = 0:dt:5;
xx(:, 1) = zeros((n+1)*d, 1);
for tt = 1:length(t)
    u(1, 1) = -K(1)*(xx(1, tt) - x_goal(1)) - K(2)*xx(3, tt) - K(3)*xx(5, tt);
    u(2, 1) = -K(1)*(xx(2, tt) - x_goal(2)) - K(2)*xx(4, tt) - K(3)*xx(6, tt);
    
    temp = (num2cell(xx(:, tt)));
    options = optimoptions('quadprog', 'Display', 'off');
    tic
    u = quadprog(eye(d), -2*u, double(A(temp{:})), double(b(temp{:})), [], [], [], [], u, options);
    elapsed(tt) = toc;
    xx(:, tt+1) = xx(:, tt) + (F*xx(:, tt) + G*u)*dt;
end

figure(1)
plot(xx(1,:), xx(2, :), 'LineWidth', 2);
hold on
plotDisk(obs_c, obs_r);
hold off